@using PagedList;
@using PagedList.Mvc;
@using X.PagedList;
@model PagedList.IPagedList<AspUploadSample.Models.FileModel>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Files";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var message = TempData["AlertMessage"] ?? string.Empty;
}

<div class="jumbotron">
    <h1>All Files</h1>
</div>

<h2>Files</h2>

<div class="col">
    <div class="col-sm-5">
        
        <p align="center">
            @Ajax.ActionLink("Upload", "Upload", "Files", new AjaxOptions() { UpdateTargetId = "fileAction", InsertionMode = InsertionMode.Replace }, new { @class = "btn btn-primary" })
            @Ajax.ActionLink("Create text File", "Create", "Files", new AjaxOptions() { UpdateTargetId = "fileAction", InsertionMode = InsertionMode.Replace }, new { @class = "btn btn-primary" }) <br />
        </p>

        @if (User.IsInRole("Administrator"))
        {
            <p align ="center">
                @Html.ActionLink("Synchronize Database", "SynchronizeDatabase", "Files", null, new { @class = "btn btn-primary" })
                @Html.ActionLink("Synchronize Folder", "SynchronizeFolder", "Files", null, new { @class = "btn btn-primary" })
            </p>
        }        
       
        @using (Html.BeginForm("Index", "Files", FormMethod.Get))
        {
            <p>
                Find by file name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                <input type="submit" value="Search" />
            </p>
        }
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>
                        File Name
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>
            </thead>
            
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FileName)
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                @Ajax.ActionLink("Edit", "Edit", new { id = item.Id }, new AjaxOptions() { UpdateTargetId = "fileAction", InsertionMode = InsertionMode.Replace }, new { @class = "btn btn-warning" })
                                @Ajax.ActionLink("Details", "Details", new { id = item.Id }, new AjaxOptions() { UpdateTargetId = "fileAction", InsertionMode = InsertionMode.Replace }, new { @class = "btn btn-info" })
                                @Ajax.ActionLink("Delete", "Delete", new { id = item.Id }, new AjaxOptions() { UpdateTargetId = "fileAction", InsertionMode = InsertionMode.Replace }, new { @class = "btn btn-danger" })
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @Html.PagedListPager((PagedList.IPagedList)Model, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter }))
    </div>
    <div class="col-sm-7" id="fileAction">
 
    </div>
</div>


@Scripts.Render("~/bundles/jquery")
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>

<script type="text/javascript">
    var message = '@message';
    if (message)
        alert(message);
</script>


<p></p>